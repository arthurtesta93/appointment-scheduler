/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Appointment } from "@prisma/client";

export class AppointmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AppointmentCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentCountArgs>
  ): Promise<number> {
    return this.prisma.appointment.count(args);
  }

  async appointments<T extends Prisma.AppointmentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentFindManyArgs>
  ): Promise<Appointment[]> {
    return this.prisma.appointment.findMany(args);
  }
  async appointment<T extends Prisma.AppointmentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentFindUniqueArgs>
  ): Promise<Appointment | null> {
    return this.prisma.appointment.findUnique(args);
  }
  async createAppointment<T extends Prisma.AppointmentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentCreateArgs>
  ): Promise<Appointment> {
    return this.prisma.appointment.create<T>(args);
  }
  async updateAppointment<T extends Prisma.AppointmentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentUpdateArgs>
  ): Promise<Appointment> {
    return this.prisma.appointment.update<T>(args);
  }
  async deleteAppointment<T extends Prisma.AppointmentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppointmentDeleteArgs>
  ): Promise<Appointment> {
    return this.prisma.appointment.delete(args);
  }
}
